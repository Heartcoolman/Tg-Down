name: CI/CD Pipeline
on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: write
  security-events: write

env:
  GO_VERSION: '1.21'
  GOPROXY: 'https://proxy.golang.org,direct'

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test and Build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Run go vet
        run: go vet ./...

      - name: Run tests
        run: go test -v ./...

      - name: Build application
        run: |
          go build -v -o tg-down cmd/main.go
          ls -la tg-down

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: tg-down-linux
          path: tg-down

  security:
    runs-on: ubuntu-latest
    name: Security Scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run Gosec Security Scanner
        uses: securecodewarrior/github-action-gosec@master
        with:
          args: './...'

  dependency-submission:
    runs-on: ubuntu-latest
    name: Submit Dependencies
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Run Go Dependency Submission
        uses: actions/go-dependency-submission@v2
        with:
          go-mod-path: go.mod
          go-build-target: cmd/main.go