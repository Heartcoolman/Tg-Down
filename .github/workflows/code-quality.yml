name: Code Quality
on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  pull-requests: read
  checks: write

env:
  GO_VERSION: '1.21'

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint Code
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m

  format-check:
    runs-on: ubuntu-latest
    name: Format Check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Check formatting
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "以下文件需要格式化:"
            gofmt -s -l .
            exit 1
          fi

      - name: Check imports
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          if [ "$(goimports -l . | wc -l)" -gt 0 ]; then
            echo "以下文件的导入需要整理:"
            goimports -l .
            exit 1
          fi

  mod-tidy:
    runs-on: ubuntu-latest
    name: Go Mod Tidy Check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Check go mod tidy
        run: |
          go mod tidy
          if [ -n "$(git status --porcelain)" ]; then
            echo "go.mod或go.sum文件需要更新，请运行 'go mod tidy'"
            git diff
            exit 1
          fi